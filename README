Purpose:
----------------------------------------------------------------------------
Provide remote SSH agent forwarding. There are very obvious and known attacks against SSH agent forwarding. Quite simply, if a remote host is compromised, your key can be used to connect to arbitrary hosts. This can be quite serious if you manage multiple sites/deployments and keep all your keys in your local agent.

Using rssh-agent, you can keep a single corporate private SSH key. Your (trusted) users connect to an SSH host using their own keys, receiving access to a remote, managed ssh-agent.  The users do not have direct access to the remote private keys, only the agent socket.

Requirements:
----------------------------------------------------------------------------
* Bash
* socat (http://www.dest-unreach.org/socat/)

Usage:
----------------------------------------------------------------------------
Run rssh-agentd on remote server. Listens on localhost, port 222 by default.

Run rssh-agent on local client, requires user@host parameter. Forwards remote host's port 222 by default. Uses random ports and socket names. Works otherwise just like the standard ssh-agent.

BUGS:
----------------------------------------------------------------------------
Users can presumably add their own keys to the agent. This is not necessarily a security vulnerability on its own, but having too many keys in your agent can trigger too-many-tries errors against SSH servers.

Use of TCP is dangerous and insecure. Switching to Unix sockets would be a significant improvement.
